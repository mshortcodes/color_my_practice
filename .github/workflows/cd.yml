name: cd

on:
  workflow_run:
    workflows:
      - ci
    types:
      - completed

jobs:
  deploy:
    name: deploy
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: color-my-practice
      DB_URL: ${{ secrets.DB_URL }}
      INSTANCE_CONN_NAME: color-my-practice:us-central1:cmp-db

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.3"

      - name: Build
        run: go build

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build, tag, and push image to Google Container Registry
        run: gcloud builds submit --tag us-central1-docker.pkg.dev/color-my-practice/cmp-ar-repo/color-my-practice:latest .

      - name: Install Cloud SQL Proxy
        run: curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.14.2/cloud-sql-proxy.linux.amd64 && chmod +x cloud-sql-proxy

      - name: Start Proxy
        run: ./cloud-sql-proxy $INSTANCE_CONN_NAME &

      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      #testing new DB_URL
      - name: Run migrations
        run: ./scripts/migrateup.sh

      - name: Print
        run: echo "Deploying to $PROJECT_ID"

      - name: Deploy to Cloud run
        run: gcloud run deploy color-my-practice --image us-central1-docker.pkg.dev/color-my-practice/cmp-ar-repo color-my-practice:latest --region us-central1 --allow-unauthenticated --project color-my-practice --max-instances=2 --env-vars INSTANCE_CONN_NAME=$INSTANCE_CONN_NAME --env-vars DB_URL=${{ secrets.DB_URL }} --env-vars JWT_SECRET=${{ secrets.JWT_SECRET }} --env-vars TOKEN_ISSUER=${{ secrets.TOKEN_ISSUER }} --env-vars PLATFORM=${{ secrets.PLATFORM }}
